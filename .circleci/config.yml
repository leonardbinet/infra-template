version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.6
  terraform: circleci/terraform@3.0.1
  node: circleci/node@5.0.0
  swissknife: roopakv/swissknife@0.65.0


defaults: &defaults
    docker:
      - image: cimg/base:2022.02
    working_directory: ~/project
    environment:
      TF_IN_AUTOMATION: true

jobs:
  backend-create:
    <<: *defaults
    steps:
      - checkout
      - aws-cli/install
      - node/install:
          install-yarn: true
      - run:
          name: create terraform backend
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run cf:bootstrap:create

  backend-delete:
    <<: *defaults
    steps:
      - checkout
      - aws-cli/install
      - node/install:
          install-yarn: true
      - run:
          name: create terraform backend
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run cf:bootstrap:_delete

  apply:
    <<: *defaults
    steps:
      - checkout
      - aws-cli/install
      - terraform/install
      - node/install:
          install-yarn: true
      - run:
          name: terraform
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run tf:service:init -reconfigure -input=false
            STAGE="ci-<< pipeline.number >>" yarn run tf:service:apply -auto-approve

  run-tests:
    <<: *defaults
    steps:
      # Add your E2E testing scripts here
      # store logs and result
      - run:
          name: Run tests and simulate a fail
          command: |
            exit 1 

  destroy:
    <<: *defaults
    steps:
      - checkout
      - aws-cli/install
      - terraform/install
      - node/install:
          install-yarn: true
      - swissknife/wait_for_job:
          job-name: run-tests
      # wait for tests to run, and proceed to destruction even though tests fail
      - run:
          name: terraform destroy
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run tf:service:_delete -auto-approve

workflows:
  run_tests:
    jobs:
      - backend-create
      - apply:
          requires:
            - backend-create
      - run-tests:
          requires:
            - apply
      # destroy uses swissknife/wait_for_job to wait for run-tests failure or success
      - destroy
      - backend-delete:
          requires:
            - destroy
