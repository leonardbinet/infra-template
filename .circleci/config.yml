version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.6
  terraform: circleci/terraform@3.0.1
  node: circleci/node@5.0.0

defaults: &defaults
    docker:
      - image: cimg/base:2022.02
    working_directory: ~/project
    environment:
      TF_IN_AUTOMATION: true

jobs:
  backend-create:
    <<: *defaults
    steps:
      - checkout
      - aws-cli/install
      - node/install:
          install-yarn: true
      - run:
          name: create terraform backend
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run cf:bootstrap:create

  backend-delete:
    <<: *defaults
    steps:
      - checkout
      - aws-cli/install
      - node/install:
          install-yarn: true
      - run:
          name: create terraform backend
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run cf:bootstrap:_delete

  plan-apply:
    <<: *defaults
    steps:
      - checkout
      - aws-cli/install
      - terraform/install
      - node/install:
          install-yarn: true
      - run:
          name: terraform init & plan
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run tf:service:init -reconfigure -input=false
            STAGE="ci-<< pipeline.number >>" yarn run tf:service:plan -out plan.tfplan
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  apply:
    <<: *defaults
    steps:
      - aws-cli/install
      - terraform/install
      - node/install:
          install-yarn: true
      - attach_workspace:
          at: ~/project
      - run:
          name: terraform
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run tf:terraform apply -auto-approve plan.tfplan
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  plan-destroy:
    <<: *defaults
    steps:
      - aws-cli/install
      - terraform/install
      - node/install:
          install-yarn: true
      - attach_workspace:
          at: ~/project
      - run:
          name: terraform create destroy plan
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run tf:service:plan -destroy -out plan.tfdestroy
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  destroy:
    <<: *defaults
    steps:
      - aws-cli/install
      - terraform/install
      - node/install:
          install-yarn: true
      - attach_workspace:
          at: ~/project
      - run:
          name: terraform destroy
          command: |
            STAGE="ci-<< pipeline.number >>" yarn run tf:terraform apply -auto-approve plan.tfdestroy

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - backend-create
      - plan-apply:
          requires:
            - backend-create
      - apply:
          requires:
            - plan-apply
      - plan-destroy:
          requires:
            - apply
      - destroy:
          requires:
            - plan-destroy
      - backend-delete:
          requires:
            - destroy
